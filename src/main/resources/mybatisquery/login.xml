<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.brownpoodle.login.dao.LoginDAO">

	<!-- ********* 로그인 ********* -->
	<select id="loginCheck" parameterType="memberVO" resultType="Integer" >
		SELECT COUNT(A.M_ID)
		FROM MEMBER A
		WHERE A.M_DELETEYN = 'Y'
		AND A.M_ID =#{m_id}
		AND A.M_PW =#{m_pw}
	</select>
	
	<select id="loginData" parameterType="memberVO" resultType="memberVO">
		SELECT 
			 A.M_NUM        M_NUM       
			,A.M_ID         M_ID        
			,A.M_PW         M_PW        
			,A.M_EMAIL      M_EMAIL     
			,A.M_NAME       M_NAME      
			,A.M_NICK       M_NICK      
			,A.M_PHONE      M_PHONE     
			,A.M_PHOTO      M_PHOTO     
			,A.M_ADDR       M_ADDR      
			,A.M_SNSTYPE    M_SNSTYPE   
			,A.M_SNSID      M_SNSID     
			,A.M_DELETEYN   M_DELETEYN  
			,A.M_INSERTDATE M_INSERTDATE
			,A.M_UPDATEDATE M_UPDATEDATE
		FROM  MEMBER A
		WHERE M_DELETEYN = 'Y'
		AND A.M_ID =#{m_id}
	</select>
	
	<select id="petData" parameterType="petVO" resultType="petVO">
		SELECT 
			 A.P_NUM		P_NUM
			,A.M_NUM		M_NUM
			,A.P_NAME		P_NAME		 
			,A.P_AGE		P_AGE	     
			,A.P_GENDER	    P_GENDER	 
			,A.P_TYPE	    P_TYPE	     
			,A.P_VARIETY	P_VARIETY	 
			,A.P_PHOTO		P_PHOTO		 
			,A.P_REGNUM	    P_REGNUM	 
			,A.P_DELETEYN	P_DELETEYN   
			,A.P_INSERTDATE P_INSERTDATE 
			,A.P_UPDATEDATE P_UPDATEDATE 
		FROM  PET A
		WHERE P_DELETEYN = 'Y'
		AND A.M_NUM = #{m_num}
	</select>
	
	
	<!-- ********* ID *********	-->
	
	<!-- email 조회 (이름, 메일주소) -->
	<select id="idAuthEmailCheck" parameterType="memberVO" resultType="Integer" >
		SELECT COUNT(A.M_EMAIL)
		FROM MEMBER A
		WHERE M_DELETEYN = 'Y'
		AND A.M_NAME =#{m_name}
		AND A.M_EMAIL =#{m_email}
	</select>
	
	<!-- ID 채번 -->
	<select id="idAuthSeq" parameterType="id_AuthNumVO" resultType="id_AuthNumVO" >
		SELECT NVL(MAX(A.ID_NUM), 0) + 1 ID_NUM
		FROM ID_AUTH_NUM A
	</select>
	
	<!-- ID_AUTH_NUM 입력 -->
	<insert id="idAuthInsert" parameterType="id_AuthNumVO">
		INSERT INTO ID_AUTH_NUM (ID_NUM, ID_AUTH_NUM, M_EMAIL, ID_AUTH_INSERTDATE)
		VALUES(#{id_num},#{id_auth_num},#{m_email},SYSDATE)
	</insert>
	
	<!-- 입력한 ID_AUTH_NUM 조회 -->
	<select id="idAuthSelect" parameterType="id_AuthNumVO" resultType="Integer" >
		SELECT 	 COUNT(A.ID_AUTH_NUM) NCNT
		FROM	 ID_AUTH_NUM A
		WHERE	 A.M_EMAIL = #{m_email}
		AND 	 A.ID_AUTH_NUM = #{id_auth_num}
	</select>
	
	<!-- ID찾기 ID 조회 -->
	<select id="idAuthEmailIdFind" parameterType="memberVO" resultType="memberVO" >
		SELECT	A.M_ID			M_ID
			   ,TO_CHAR(A.M_INSERTDATE, 'YYYY-MM-DD') M_INSERTDATE
		FROM 	MEMBER 			A
		WHERE 	A.M_DELETEYN 	= 'Y'
		AND 	A.M_EMAIL  		= #{m_email}
	</select>
	
	<!-- 사용된 인증번호 삭제 -->
	<delete id="idAuthDelete" parameterType="id_AuthNumVO">
		DELETE FROM ID_AUTH_NUM
	</delete>
	
	
	
	<!-- ********* PW ********* -->
	<select id="idFindPw" parameterType="memberVO" resultType="Integer" >
		SELECT COUNT(A.M_ID)
		FROM MEMBER A
		WHERE M_DELETEYN = 'Y'
		AND A.M_ID =#{m_id}
	</select>
	
		
	<!-- email 조회 (아이디, 메일주소) -->
	<resultMap id="mmm" type="com.brownpoodle.member.vo.MemberVO" >
		<result property="m_id" column="M_ID"/>
		<result property="m_email" column="M_EMAIL"/>	
	</resultMap>
	<select id="pwAuthEmailCheck" parameterType="memberVO" resultMap="mmm">
		SELECT A.M_EMAIL M_EMAIL
		FROM MEMBER A
		WHERE A.M_DELETEYN = 'Y'
		AND A.M_ID = #{m_id}
		AND A.M_EMAIL = #{m_email}
	</select>
	
	<!-- PW 채번 -->
	<select id="pwAuthSeq" parameterType="pw_AuthNumVO" resultType="pw_AuthNumVO" >
		SELECT NVL(MAX(A.PW_NUM), 0) + 1 PW_NUM
		FROM PW_AUTH_NUM A
	</select>
	
	<!-- PW_AUTH_NUM 입력 -->
	<insert id="pwAuthInsert" parameterType="pw_AuthNumVO">
		INSERT INTO PW_AUTH_NUM (PW_NUM, PW_AUTH_NUM, M_ID, PW_AUTH_INSERTDATE)
		VALUES(#{pw_num}, #{pw_auth_num}, #{m_id}, SYSDATE)
	</insert>	
	
	<!-- PW 이메일 인증한  id 값 가지고 컨트롤러에서 비교해서 로직구현-->
	<select id="pwAuthSelect" parameterType="pw_AuthNumVO" resultType="pw_AuthNumVO" >
		SELECT	*
		FROM    PW_AUTH_NUM 	A
		WHERE 	A.M_ID 			= #{m_id}
		<!--AND 	A.PW_AUTH_NUM 	= #{pw_auth_num}-->
	</select>
	
	<!-- PW찾기 버튼 -> 비밀번호 변경  -->
	<delete id="pwDel" parameterType="pw_AuthNumVO">
		DELETE 
		FROM    PW_AUTH_NUM 	
		WHERE 	M_ID 			= #{m_id}
	</delete>
	
	<!-- PW변경 -->
	<update id="pwChange" parameterType="memberVO">
		UPDATE	MEMBER		
			SET M_PW		= #{m_pw}
		WHERE 	M_DELETEYN 	= 'Y'
		AND     M_ID		= #{m_id}
	</update>
	
	<!-- NAVER 회원가입 쿼리 -->
	<insert id="naverInsert" parameterType="memberVO">
		<selectKey keyProperty="m_num" resultType="String" order="BEFORE">
			SELECT
			'M' || LPAD(NVL(MAX(SUBSTR(M_NUM,
			-4)), 0) + 1, 4, '0') FROM MEMBER
		</selectKey>
		INSERT INTO MEMBER(
			M_NUM, M_ID, M_PW, 
			M_EMAIL, M_NAME, M_NICK, 
			M_PHONE, M_PHOTO, M_ADDR, 
			M_SNSTYPE,  M_SNSID, M_DELETEYN, 
			M_INSERTDATE, M_UPDATEDATE)
		VALUES(
			#{m_num, jdbcType=VARCHAR}, #{m_id, jdbcType=VARCHAR},'NAVER',
			#{m_email, jdbcType=VARCHAR}, #{m_name, jdbcType=VARCHAR}, #{m_nick, jdbcType=VARCHAR},
			#{m_phone, jdbcType=VARCHAR}, #{m_photo, jdbcType=VARCHAR}, '미지정',
			'NAVER', #{m_snsid, jdbcType=VARCHAR}, 'Y',
			SYSDATE,SYSDATE)
	</insert>
	
	<!-- 네이버 아이디 조회  -->
	<select id="naverSelect" parameterType="memberVO" resultType="memberVO">
		SELECT M_NUM, M_ID, M_NICK, M_PHOTO
		FROM MEMBER
		WHERE M_ID = #{m_id}
	</select>
	
	<!-- NAVER 아아디 로그인 -->
	<select id="naverLogin" parameterType="memberVO" resultType="memberVO">
		SELECT M_NUM, M_ID, M_NICK, M_PHOTO
		FROM MEMBER
		WHERE M_ID = #{m_id} AND M_EMAIL = #{m_email} AND M_NAME = #{m_name}
	</select>
	
	<!-- KAKAO 회원가입 쿼리 -->
	<insert id="kakaoInsert" parameterType="memberVO">
		<selectKey keyProperty="m_num" resultType="String" order="BEFORE">
			SELECT
			'M' || LPAD(NVL(MAX(SUBSTR(M_NUM,
			-4)), 0) + 1, 4, '0') FROM MEMBER
		</selectKey>
		INSERT INTO MEMBER(
			M_NUM, M_ID, M_PW, 
			M_EMAIL, M_NAME, M_NICK, 
			M_PHONE, M_PHOTO, M_ADDR, 
			M_SNSTYPE,  M_SNSID, M_DELETEYN, 
			M_INSERTDATE, M_UPDATEDATE)
		VALUES(
			#{m_num, jdbcType=VARCHAR}, #{m_id, jdbcType=VARCHAR},'KAKAO',
			#{m_email, jdbcType=VARCHAR}, #{m_name, jdbcType=VARCHAR}, #{m_nick, jdbcType=VARCHAR},
			'010-0000-0000', #{m_photo, jdbcType=VARCHAR}, '미지정',
			'KAKAO', #{m_snsid, jdbcType=VARCHAR}, 'Y',
			SYSDATE,SYSDATE)
	</insert>
	
	<!-- KAKAO 아이디 조회  -->
	<select id="kakaoSelect" parameterType="memberVO" resultType="memberVO">
		SELECT M_NUM, M_ID, M_NICK, M_PHOTO
		FROM MEMBER
		WHERE M_ID = #{m_id}
	</select>
	
	<!-- KAKAO 아아디 로그인 -->
	<select id="kakaoLogin" parameterType="memberVO" resultType="memberVO">
		SELECT M_NUM, M_ID, M_NICK, M_PHOTO
		FROM MEMBER
		WHERE M_ID = #{m_id} AND M_EMAIL = #{m_email} AND M_NAME = #{m_name}
	</select>
	
</mapper>